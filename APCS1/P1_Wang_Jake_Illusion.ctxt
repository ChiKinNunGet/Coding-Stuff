#BlueJ class context
comment0.target=P1_Wang_Jake_Illusion
comment1.params=link
comment1.target=P1_Wang_Jake_Illusion(java.lang.String)
comment1.text=\n\ Just\ initializes\ the\ url\ to\ read\ the\ file\ from\n\ @param\ link\ url\ to\ draw,\ example\ is\ https\://i.imgur.com/pN82jdV.png.\ Things\ in\ this\ imgur\ link\ format\ tend\ to\ work\n
comment2.params=
comment2.target=void\ loadAndDraw()
comment2.text=\n\ This\ loads\ the\ image\ using\ ImageIO\ and\ BufferedImage,\ and\ initialized\ image\ dimensions/position.\ Helper\ function,\ no\ need\ to\ explicitly\ run\n
comment3.params=link
comment3.target=void\ setLink(java.lang.String)
comment3.text=\n\ @param\ link\ url\ for\ the\ image\ (optical\ illusion)\ that\ will\ be\ drawn.\ Preferably\ one\ with\ a\ filename\ extension\n
comment4.params=filter
comment4.target=void\ setFilter(java.awt.Color)
comment4.text=\n\ Draws\ except\ with\ a\ color\ filter\ over\ the\ image,\ the\ exact\ formula\ is\ complicated\ but\ its\ similar\ to\ adding.\n\ @param\ filter\ the\ color\ filter\ to\ be\ added\ (java.awt.Color)\n
comment5.params=cX\ cY
comment5.target=void\ setLocation(int,\ int)
comment5.text=\n\ Shifts\ the\ image\ so\ that\ its\ center\ is\ on\ (cX,\ cY),\ in\ gpdraw\ coordinates\n\ @param\ cX\ x\ value\ of\ new\ image\ center\n\ @param\ cX\ x\ value\ of\ new\ image\ center\n
comment6.params=pen0
comment6.target=void\ setPen(gpdraw.DrawingTool)
comment6.text=\n\ sets\ gpdraw\ DrawingTool\n\ @param\ pen0\ pen\ to\ use\n
comment7.params=a\ b
comment7.target=double\ scale(double,\ double)
comment7.text=\n\ helper\ function\ to\ add\ and\ scale\ two\ numbers\n\ @param\ a\ primary\ number\ to\ be\ added\ to,\ this\ is\ the\ original\ color\n\ @param\ b\ secondary\ number\ to\ added,\ this\ is\ the\ color\ filter\n
comment8.params=x\ y\ image
comment8.target=java.awt.Color\ findColor(int,\ int,\ java.awt.image.BufferedImage)
comment8.text=\n\ Draws\ pixel\ from\ buffered\ image\ by\ taking\ the\ color\ of\ corresponding\ pixel.\ helper\ function,\ no\ need\ to\ explicitly\ run\n\ @param\ x\ x\ value\ on\ gpdraw\ coords\n\ @param\ y\ y\ value\ on\ gpdraw\ coords\n
comment9.params=j\ image
comment9.target=void\ row(int,\ java.awt.image.BufferedImage)
comment9.text=\n\ This\ draws\ a\ single\ row\ based\ on\ the\ height\ of\ the\ row\ and\ the\ source\ image.\ Helper\ function,\ no\ need\ to\ explicitly\ run\n\ @param\ j\ gpdraw\ y\ value\ of\ the\ pixel\ row\ to\ draw\n\ @param\ image\ BufferedImage\ image\ passed\ in\ to\ pass\ down\ to\ findColor\n
numComments=10
